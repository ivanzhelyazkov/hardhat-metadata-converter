const fs = require('fs');

/**
 * Used to verify contracts in block explorers using standard json input format
 * Extracts standard json file info from a build-info.json file generated by hardhat (found in artifacts/build-info/*.json)
 */

const main = async () => {
  try {
    const buildInfoPath = 'build-info.json';
    const outputPath = 'build-info-formatted.json';

    const buildInfo = await readJson(buildInfoPath);
    const formattedData = extractSourceInfo(buildInfo);

    await writeJson(outputPath, formattedData);
    console.log(`Formatted build info written to ${outputPath}`);
  } catch (error) {
    console.error(`Error: ${error.message}`);
  }
};

const extractSourceInfo = (buildInfo) => {
  const sources = {};
  for (const [filePath, fileContent] of Object.entries(buildInfo.input.sources)) {
    sources[filePath] = {
      content: fileContent.content
    };
  }

  return {
    language: buildInfo.input.language,
    sources: sources,
    settings: buildInfo.input.settings
  };
};

const readJson = (filePath) => {
  return new Promise((resolve, reject) => {
    fs.readFile(filePath, 'utf8', (err, data) => {
      if (err) reject(err);
      else resolve(JSON.parse(data));
    });
  });
};

const writeJson = (filePath, data) => {
  return new Promise((resolve, reject) => {
    fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf8', (err) => {
      if (err) reject(err);
      else resolve();
    });
  });
};

main();